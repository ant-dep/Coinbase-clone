/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IMarketplace, IMarketplaceInterface } from "../IMarketplace";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timeBuffer",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bidBufferBps",
        type: "uint256",
      },
    ],
    name: "AuctionBuffersUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "closer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "cancelled",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "auctionCreator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winningBidder",
        type: "address",
      },
    ],
    name: "AuctionClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "restricted",
        type: "bool",
      },
    ],
    name: "ListingRestricted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "listingCreator",
        type: "address",
      },
    ],
    name: "ListingUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "newFee",
        type: "uint64",
      },
    ],
    name: "MarketFeeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "assetContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quantity",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "reservePricePerToken",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyoutPricePerToken",
            type: "uint256",
          },
          {
            internalType: "enum IMarketplace.TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "enum IMarketplace.ListingType",
            name: "listingType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IMarketplace.Listing",
        name: "listing",
        type: "tuple",
      },
    ],
    name: "NewListing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "offeror",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum IMarketplace.ListingType",
        name: "listingType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantityWanted",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalOfferAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "NewOffer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantityBought",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPricePaid",
        type: "uint256",
      },
    ],
    name: "NewSale",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_offeror",
        type: "address",
      },
    ],
    name: "acceptOffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_closeFor",
        type: "address",
      },
    ],
    name: "closeAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "assetContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "secondsUntilEndTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quantityToList",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currencyToAccept",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "reservePricePerToken",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyoutPricePerToken",
            type: "uint256",
          },
          {
            internalType: "enum IMarketplace.ListingType",
            name: "listingType",
            type: "uint8",
          },
        ],
        internalType: "struct IMarketplace.ListingParameters",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "createListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantityWanted",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pricePerToken",
        type: "uint256",
      },
    ],
    name: "offer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantityToList",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reservePricePerToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_buyoutPricePerToken",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_currencyToAccept",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_secondsUntilEndTime",
        type: "uint256",
      },
    ],
    name: "updateListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IMarketplace__factory {
  static readonly abi = _abi;
  static createInterface(): IMarketplaceInterface {
    return new utils.Interface(_abi) as IMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMarketplace {
    return new Contract(address, _abi, signerOrProvider) as IMarketplace;
  }
}
