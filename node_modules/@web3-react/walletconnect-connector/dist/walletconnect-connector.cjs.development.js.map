{"version":3,"file":"walletconnect-connector.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["import { IWCEthRpcConnectionOptions } from '@walletconnect/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { ConnectorUpdate } from '@web3-react/types'\n\nexport const URI_AVAILABLE = 'URI_AVAILABLE'\n\nexport interface WalletConnectConnectorArguments extends IWCEthRpcConnectionOptions {\n  supportedChainIds?: number[]\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nfunction getSupportedChains({ supportedChainIds, rpc }: WalletConnectConnectorArguments): number[] | undefined {\n  if (supportedChainIds) {\n    return supportedChainIds\n  }\n\n  return rpc ? Object.keys(rpc).map(k => Number(k)) : undefined\n}\n\nexport class WalletConnectConnector extends AbstractConnector {\n  public walletConnectProvider?: any\n  private readonly config: WalletConnectConnectorArguments\n\n  constructor(config: WalletConnectConnectorArguments) {\n    super({ supportedChainIds: getSupportedChains(config) })\n    this.config = config\n\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleDisconnect = this.handleDisconnect.bind(this)\n  }\n\n  private handleChainChanged(chainId: number | string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts[0] })\n  }\n\n  private handleDisconnect(): void {\n    if (__DEV__) {\n      console.log(\"Handling 'disconnect' event\")\n    }\n    // we have to do this because of a @walletconnect/web3-provider bug\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop()\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n      this.walletConnectProvider = undefined\n    }\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.walletConnectProvider) {\n      const WalletConnectProvider = await import('@walletconnect/ethereum-provider').then(m => m?.default ?? m)\n      this.walletConnectProvider = new WalletConnectProvider(this.config)\n    }\n\n    // ensure that the uri is going to be available, and emit an event if there's a new uri\n    if (!this.walletConnectProvider.wc.connected) {\n      await this.walletConnectProvider.wc.createSession(\n        this.config.chainId ? { chainId: this.config.chainId } : undefined\n      )\n      this.emit(URI_AVAILABLE, this.walletConnectProvider.wc.uri)\n    }\n\n    let account: string\n    account = await new Promise<string>((resolve, reject) => {\n      const userReject = () => {\n        // Erase the provider manually\n        this.walletConnectProvider = undefined\n        reject(new UserRejectedRequestError())\n      }\n\n      // Workaround to bubble up the error when user reject the connection\n      this.walletConnectProvider.wc.on('disconnect', () => {\n        // Check provider has not been enabled to prevent this event callback from being called in the future\n        if (!account) {\n          userReject()\n        }\n      })\n\n      this.walletConnectProvider\n        .enable()\n        .then((accounts: string[]) => resolve(accounts[0]))\n        .catch((error: Error): void => {\n          // TODO ideally this would be a better check\n          if (error.message === 'User closed modal') {\n            userReject()\n            return\n          }\n          reject(error)\n        })\n    }).catch(err => {\n      throw err\n    })\n\n    this.walletConnectProvider.on('disconnect', this.handleDisconnect)\n    this.walletConnectProvider.on('chainChanged', this.handleChainChanged)\n    this.walletConnectProvider.on('accountsChanged', this.handleAccountsChanged)\n\n    return { provider: this.walletConnectProvider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.walletConnectProvider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return Promise.resolve(this.walletConnectProvider.chainId)\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return Promise.resolve(this.walletConnectProvider.accounts).then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.removeListener('disconnect', this.handleDisconnect)\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n      this.walletConnectProvider.disconnect()\n    }\n  }\n\n  public async close() {\n    this.emitDeactivate()\n  }\n}\n"],"names":["URI_AVAILABLE","UserRejectedRequestError","name","constructor","message","Error","getSupportedChains","supportedChainIds","rpc","Object","keys","map","k","Number","undefined","WalletConnectConnector","config","handleChainChanged","bind","handleAccountsChanged","handleDisconnect","chainId","console","log","emitUpdate","accounts","account","walletConnectProvider","stop","removeListener","emitDeactivate","activate","Promise","resolve","reject","userReject","wc","on","enable","then","error","err","provider","connected","createSession","emit","uri","m","WalletConnectProvider","getProvider","getChainId","getAccount","deactivate","disconnect","close","AbstractConnector"],"mappings":"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"}